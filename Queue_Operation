#include <stdio.h>
#include <stdbool.h>

#define MAX 5
int arr[MAX];
int rear = -1;
int front = -1;

bool isFull() {
    return rear == MAX - 1;
}

bool isEmpty() {
    return front == -1 || front > rear;
}

void enqueue() {
    int val;
    if (isFull()) {
        printf("Overflow\n");
        return;
    }
    printf("Enter a value: ");
    scanf("%d", &val);
    if (isEmpty()) {
        front = 0;
    }
    rear++;
    arr[rear] = val;
}

void dequeue() {
    if (isEmpty()) {
        printf("Underflow\n");
        return;
    }
    int temp = arr[front];
    printf("Dequeued: %d\n", temp);
    front++;
    if (front > rear) {
        front = rear = -1; // Queue is empty now
    }
}

void peek() {
    if (isEmpty()) {
        printf("Underflow\n");
        return;
    }
    printf("Front Element: %d\n", arr[front]);
}

void display() {
    if (isEmpty()) {
        printf("Queue Empty\n");
        return;
    }
    printf("Queue Elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int input;
    bool cont = true;

    while (cont) {
        printf("1. Enqueue\n2. Dequeue\n3. Peek\n4. Display\n5. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &input);

        switch (input) {
            case 1:
                enqueue();
                break;
            case 2:
                dequeue();
                break;
            case 3:
                peek();
                break;
            case 4:
                display();
                break;
            case 5:
                cont = false;
                break;
            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
